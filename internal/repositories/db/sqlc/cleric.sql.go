// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: cleric.sql

package db

import (
	"context"
)

const getClericClassData = `-- name: GetClericClassData :one
SELECT level, experience_points, hit_dice, saving_throw, fighting_ability, turning_ability, casting_ability, spell_slot_level1, spell_slot_level2, spell_slot_level3, spell_slot_level4, spell_slot_level5, spell_slot_level6 FROM cleric_class_data 
WHERE level = ? LIMIT 1
`

func (q *Queries) GetClericClassData(ctx context.Context, level int64) (ClericClassDatum, error) {
	row := q.queryRow(ctx, q.getClericClassDataStmt, getClericClassData, level)
	var i ClericClassDatum
	err := row.Scan(
		&i.Level,
		&i.ExperiencePoints,
		&i.HitDice,
		&i.SavingThrow,
		&i.FightingAbility,
		&i.TurningAbility,
		&i.CastingAbility,
		&i.SpellSlotLevel1,
		&i.SpellSlotLevel2,
		&i.SpellSlotLevel3,
		&i.SpellSlotLevel4,
		&i.SpellSlotLevel5,
		&i.SpellSlotLevel6,
	)
	return i, err
}

const getNextClericLevel = `-- name: GetNextClericLevel :one
SELECT level, experience_points, hit_dice, saving_throw, fighting_ability, turning_ability, casting_ability, spell_slot_level1, spell_slot_level2, spell_slot_level3, spell_slot_level4, spell_slot_level5, spell_slot_level6 FROM cleric_class_data 
WHERE level > ? 
ORDER BY level ASC 
LIMIT 1
`

func (q *Queries) GetNextClericLevel(ctx context.Context, level int64) (ClericClassDatum, error) {
	row := q.queryRow(ctx, q.getNextClericLevelStmt, getNextClericLevel, level)
	var i ClericClassDatum
	err := row.Scan(
		&i.Level,
		&i.ExperiencePoints,
		&i.HitDice,
		&i.SavingThrow,
		&i.FightingAbility,
		&i.TurningAbility,
		&i.CastingAbility,
		&i.SpellSlotLevel1,
		&i.SpellSlotLevel2,
		&i.SpellSlotLevel3,
		&i.SpellSlotLevel4,
		&i.SpellSlotLevel5,
		&i.SpellSlotLevel6,
	)
	return i, err
}

const listClericClassData = `-- name: ListClericClassData :many
SELECT level, experience_points, hit_dice, saving_throw, fighting_ability, turning_ability, casting_ability, spell_slot_level1, spell_slot_level2, spell_slot_level3, spell_slot_level4, spell_slot_level5, spell_slot_level6 FROM cleric_class_data 
ORDER BY level ASC
`

func (q *Queries) ListClericClassData(ctx context.Context) ([]ClericClassDatum, error) {
	rows, err := q.query(ctx, q.listClericClassDataStmt, listClericClassData)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ClericClassDatum{}
	for rows.Next() {
		var i ClericClassDatum
		if err := rows.Scan(
			&i.Level,
			&i.ExperiencePoints,
			&i.HitDice,
			&i.SavingThrow,
			&i.FightingAbility,
			&i.TurningAbility,
			&i.CastingAbility,
			&i.SpellSlotLevel1,
			&i.SpellSlotLevel2,
			&i.SpellSlotLevel3,
			&i.SpellSlotLevel4,
			&i.SpellSlotLevel5,
			&i.SpellSlotLevel6,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
