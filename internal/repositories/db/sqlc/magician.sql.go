// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: magician.sql

package db

import (
	"context"
)

const getMagicianClassData = `-- name: GetMagicianClassData :one
SELECT id, level, experience_points, hit_dice, saving_throw, fighting_ability, casting_ability, spell_slots_level_1, spell_slots_level_2, spell_slots_level_3, spell_slots_level_4, spell_slots_level_5, spell_slots_level_6 FROM magician_class_data 
WHERE level = ? 
LIMIT 1
`

func (q *Queries) GetMagicianClassData(ctx context.Context, level int64) (MagicianClassDatum, error) {
	row := q.queryRow(ctx, q.getMagicianClassDataStmt, getMagicianClassData, level)
	var i MagicianClassDatum
	err := row.Scan(
		&i.ID,
		&i.Level,
		&i.ExperiencePoints,
		&i.HitDice,
		&i.SavingThrow,
		&i.FightingAbility,
		&i.CastingAbility,
		&i.SpellSlotsLevel1,
		&i.SpellSlotsLevel2,
		&i.SpellSlotsLevel3,
		&i.SpellSlotsLevel4,
		&i.SpellSlotsLevel5,
		&i.SpellSlotsLevel6,
	)
	return i, err
}

const getNextMagicianLevel = `-- name: GetNextMagicianLevel :one
SELECT id, level, experience_points, hit_dice, saving_throw, fighting_ability, casting_ability, spell_slots_level_1, spell_slots_level_2, spell_slots_level_3, spell_slots_level_4, spell_slots_level_5, spell_slots_level_6 FROM magician_class_data 
WHERE level > ? 
ORDER BY level ASC 
LIMIT 1
`

func (q *Queries) GetNextMagicianLevel(ctx context.Context, level int64) (MagicianClassDatum, error) {
	row := q.queryRow(ctx, q.getNextMagicianLevelStmt, getNextMagicianLevel, level)
	var i MagicianClassDatum
	err := row.Scan(
		&i.ID,
		&i.Level,
		&i.ExperiencePoints,
		&i.HitDice,
		&i.SavingThrow,
		&i.FightingAbility,
		&i.CastingAbility,
		&i.SpellSlotsLevel1,
		&i.SpellSlotsLevel2,
		&i.SpellSlotsLevel3,
		&i.SpellSlotsLevel4,
		&i.SpellSlotsLevel5,
		&i.SpellSlotsLevel6,
	)
	return i, err
}

const listMagicianClassData = `-- name: ListMagicianClassData :many
SELECT id, level, experience_points, hit_dice, saving_throw, fighting_ability, casting_ability, spell_slots_level_1, spell_slots_level_2, spell_slots_level_3, spell_slots_level_4, spell_slots_level_5, spell_slots_level_6 FROM magician_class_data 
ORDER BY level ASC
`

func (q *Queries) ListMagicianClassData(ctx context.Context) ([]MagicianClassDatum, error) {
	rows, err := q.query(ctx, q.listMagicianClassDataStmt, listMagicianClassData)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []MagicianClassDatum{}
	for rows.Next() {
		var i MagicianClassDatum
		if err := rows.Scan(
			&i.ID,
			&i.Level,
			&i.ExperiencePoints,
			&i.HitDice,
			&i.SavingThrow,
			&i.FightingAbility,
			&i.CastingAbility,
			&i.SpellSlotsLevel1,
			&i.SpellSlotsLevel2,
			&i.SpellSlotsLevel3,
			&i.SpellSlotsLevel4,
			&i.SpellSlotsLevel5,
			&i.SpellSlotsLevel6,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
